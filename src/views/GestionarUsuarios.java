package views;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JTable;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import controller.UsuarioController;
import model.Usuario;

public class GestionarUsuarios extends javax.swing.JFrame {

    String user;
    int session_user;
    public static int id_UserUp = 0;
    DefaultTableModel model = new DefaultTableModel();
    private final UsuarioController userController;

    public GestionarUsuarios() {
        initComponents();
        user = Login.user;
        session_user = Administrador.session_user;
        this.userController = new UsuarioController();

        setSize(630, 330);
        setTitle("Usuarios Registrados - Sesión de " + user);
        setResizable(false);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        ImageIcon wallpaper = new ImageIcon("src/images/wallpaperPrincipal.jpg");
        Icon icon = new ImageIcon(wallpaper.getImage().getScaledInstance(label_wallpaper.getWidth(),
                label_wallpaper.getHeight(), Image.SCALE_DEFAULT));
        label_wallpaper.setIcon(icon);
        this.repaint();
        
        if (session_user == 1) {
            setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        } else {
            setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        }

        table_users = new JTable(model);
        jScrollPane1.setViewportView(table_users);

        model.addColumn(" ");
        model.addColumn("Nombre");
        model.addColumn("Username");
        model.addColumn("Permisos");
        model.addColumn("Estatus");
        table_users.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);

        fillTable();
        
        table_users.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int row_point = table_users.rowAtPoint(e.getPoint());
                int column_point = 0;

                if (row_point > -1) {
                    id_UserUp = (int) model.getValueAt(row_point, column_point);
                    InformacionUsuario informationUser = new InformacionUsuario();
                    informationUser.setVisible(true);
                }
            }
        });
    }

    private List<Usuario> Search() {
        return this.userController.ToListUser();
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/Icon-40px.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_titleGestions = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_users = new javax.swing.JTable();
        label_footer = new javax.swing.JLabel();
        label_wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label_titleGestions.setFont(new java.awt.Font("DejaVuSansMono Nerd Font", 1, 24)); // NOI18N
        label_titleGestions.setForeground(new java.awt.Color(255, 255, 255));
        label_titleGestions.setText("Usuarios Registrados");
        getContentPane().add(label_titleGestions, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 10, 280, -1));

        table_users.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table_users);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 630, 180));

        label_footer.setBackground(new java.awt.Color(102, 102, 102));
        label_footer.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        label_footer.setForeground(new java.awt.Color(102, 102, 102));
        label_footer.setText("Desarrollado por Marlon Torres © 2023");
        getContentPane().add(label_footer, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 300, 242, -1));
        getContentPane().add(label_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 330));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            java.awt.EventQueue.invokeLater(() -> {
                new GestionarUsuarios().setVisible(true);
            });
        } catch (Exception e) {
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_footer;
    private javax.swing.JLabel label_titleGestions;
    private javax.swing.JLabel label_wallpaper;
    private javax.swing.JTable table_users;
    // End of variables declaration//GEN-END:variables

    private void fillTable() {
        List<Usuario> us = Search();
        try {
            for (Usuario users : us) {
                model.addRow(new Object[]{users.getId(), users.getName(), 
                    users.getUsername(), users.getLevelType(), users.getStatus()});
            }
        } catch (Exception e) {
            throw e;
        }
    }
}
