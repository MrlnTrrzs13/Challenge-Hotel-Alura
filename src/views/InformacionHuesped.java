package views;

import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import com.toedter.calendar.JDateChooser;
import java.awt.EventQueue;
import java.util.List;
import static javax.swing.border.BevelBorder.RAISED;
import javax.swing.border.SoftBevelBorder;
import java.sql.Date;
import model.Huesped;
import model.Reserva;
import controller.HuespedController;
import controller.ReservaController;
import javax.swing.JTextField;

public class InformacionHuesped extends javax.swing.JFrame {

    private String user = "", name;
    private int id_huespedUp = 0, session_user = 0, userSession = 0, id_reservation;
    public static int id = 0, IdReservation = 0;
    public static JDateChooser txt_birthdate;
    DefaultTableModel model = new DefaultTableModel();
    private final HuespedController guestController;
    private final ReservaController reservationController;

    public InformacionHuesped() {
        initComponents();
        user = Login.user;
        session_user = Administrador.session_user;
        userSession = Capturista.userSession;
        this.id_huespedUp = GestionarHuesped.id_huespedUp;
        this.guestController = new HuespedController();
        this.reservationController = new ReservaController();

        setTitle("Información del Huésped " + name + " " + " - Sesión de " + user);
        setSize(650, 620);
        setResizable(false);
        setLocationRelativeTo(null);

        ImageIcon wallpaper = new ImageIcon("src/images/wallpaperPrincipal.jpg");
        Icon icon = new ImageIcon(wallpaper.getImage().getScaledInstance(label_wallpaper.getWidth(),
                label_wallpaper.getHeight(), Image.SCALE_DEFAULT));
        label_wallpaper.setIcon(icon);
        this.repaint();

        if (session_user == 1 || userSession == 1) {
            setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        } else {
            setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        }

        txt_birthdate = new JDateChooser();
        txt_birthdate.getCalendarButton().setBackground(new java.awt.Color(204, 204, 255));
        txt_birthdate.getCalendarButton().setIcon(new ImageIcon(RegistroReservas.class.getResource("/images/icon-reservas.png")));
        txt_birthdate.getCalendarButton().setFont(new java.awt.Font("Roboto", 1, 12));
        txt_birthdate.setBounds(20, 390, 210, 30);
        txt_birthdate.getCalendarButton().setBounds(189, 0, 21, 28);
        txt_birthdate.setBackground(Color.WHITE);
        txt_birthdate.setBorder(new SoftBevelBorder(RAISED));
        txt_birthdate.setDateFormatString("yyyy-MM-dd");
        txt_birthdate.setFont(new java.awt.Font("Roboto", 1, 18));
        getContentPane().add(txt_birthdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 210, 30));

        FillFormulary();

        table_reservations = new JTable(model);
        jScrollPane1.setViewportView(table_reservations);

        model.addColumn("Id Reserva");
        model.addColumn("Fecha Entrada");
        model.addColumn("Fecha Salida");
        model.addColumn("Precio a pagar");
        model.addColumn("Forma de pago");
        table_reservations.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);

        ToListReservation();

        table_reservations.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int row_point = table_reservations.rowAtPoint(e.getPoint());
                int column_point = 0;

                if (row_point > -1) {
                    IdReservation = (int) model.getValueAt(row_point, column_point);
                    InformacionReserva InfomationReservation = new InformacionReserva();
                    InfomationReservation.setVisible(true);
                }
            }
        });
    }

    private List<Huesped> SearchGuest() {
        return this.guestController.SearchId(id_huespedUp);
    }

    private List<Reserva> ToListReservations() {
        return this.reservationController.SearchId(id_reservation);
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/Icon-40px.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_register = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_reservations = new javax.swing.JTable();
        label_title = new javax.swing.JLabel();
        label_log = new javax.swing.JLabel();
        label_id = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();
        label_name = new javax.swing.JLabel();
        txt_name = new javax.swing.JTextField();
        label_lastName = new javax.swing.JLabel();
        txt_lastName = new javax.swing.JTextField();
        txt_phone = new javax.swing.JTextField();
        label_phone = new javax.swing.JLabel();
        label_birthdate = new javax.swing.JLabel();
        label_nationality = new javax.swing.JLabel();
        jcb_nationality = new javax.swing.JComboBox<>();
        label_footer = new javax.swing.JLabel();
        label_wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_register.setBackground(new java.awt.Color(153, 153, 255));
        btn_register.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        btn_register.setForeground(new java.awt.Color(255, 255, 255));
        btn_register.setText("Registrar Reserva");
        btn_register.setBorder(null);
        btn_register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registerActionPerformed(evt);
            }
        });
        getContentPane().add(btn_register, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 440, 210, 45));

        btn_update.setBackground(new java.awt.Color(153, 153, 255));
        btn_update.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        btn_update.setForeground(new java.awt.Color(255, 255, 255));
        btn_update.setText("Actualizar Huésped");
        btn_update.setBorder(null);
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });
        getContentPane().add(btn_update, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 500, 210, 45));

        btn_delete.setBackground(new java.awt.Color(153, 153, 255));
        btn_delete.setForeground(new java.awt.Color(255, 255, 255));
        btn_delete.setText("Eliminar");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });
        getContentPane().add(btn_delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 450, -1, -1));

        table_reservations.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table_reservations);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 130, 400, 300));

        label_title.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        label_title.setForeground(new java.awt.Color(255, 255, 255));
        label_title.setText("Información del Huésped");
        getContentPane().add(label_title, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, 275, -1));

        label_log.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Ha-100px.png"))); // NOI18N
        getContentPane().add(label_log, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 10, 100, 100));

        label_id.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        label_id.setForeground(new java.awt.Color(255, 255, 255));
        label_id.setText("Id Huésped:");
        getContentPane().add(label_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        txt_id.setEditable(false);
        txt_id.setBackground(new java.awt.Color(204, 204, 255));
        txt_id.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txt_id.setForeground(java.awt.SystemColor.activeCaption);
        txt_id.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(txt_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 210, -1));

        label_name.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        label_name.setForeground(new java.awt.Color(255, 255, 255));
        label_name.setText("Nombre:");
        getContentPane().add(label_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        txt_name.setBackground(new java.awt.Color(204, 204, 255));
        txt_name.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txt_name.setForeground(java.awt.SystemColor.activeCaption);
        txt_name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(txt_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 210, -1));

        label_lastName.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        label_lastName.setForeground(new java.awt.Color(255, 255, 255));
        label_lastName.setText("Apellido:");
        getContentPane().add(label_lastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, -1, -1));

        txt_lastName.setBackground(new java.awt.Color(204, 204, 255));
        txt_lastName.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txt_lastName.setForeground(java.awt.SystemColor.activeCaption);
        txt_lastName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(txt_lastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 210, -1));

        txt_phone.setBackground(new java.awt.Color(204, 204, 255));
        txt_phone.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txt_phone.setForeground(java.awt.SystemColor.activeCaption);
        txt_phone.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(txt_phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 210, -1));

        label_phone.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        label_phone.setForeground(new java.awt.Color(255, 255, 255));
        label_phone.setText("Telefono:");
        getContentPane().add(label_phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, -1, -1));

        label_birthdate.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        label_birthdate.setForeground(new java.awt.Color(255, 255, 255));
        label_birthdate.setText("Fecha de Nacimiento:");
        getContentPane().add(label_birthdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        label_nationality.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        label_nationality.setForeground(new java.awt.Color(255, 255, 255));
        label_nationality.setText("Nacionalidad:");
        getContentPane().add(label_nationality, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, -1, -1));

        jcb_nationality.setBackground(new java.awt.Color(204, 204, 255));
        jcb_nationality.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jcb_nationality.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "afgano-afgana", "alemán-alemana", "árabe-árabe", "argentino-argentina", "australiano-australiana", "belga-belga", "boliviano-boliviana", "brasileño-brasileña", "camboyano-camboyana", "canadiense-canadiense", "chileno-chilena", "chino-china", "colombiano-colombiana", "coreano-coreana", "costarricense-costarricense", "cubano-cubana", "danés-danesa", "ecuatoriano-ecuatoriana", "egipcio-egipcia", "salvadoreño-salvadoreña", "escocés-escocesa", "español-española", "estadounidense-estadounidense", "estonio-estonia", "etiope-etiope", "filipino-filipina", "finlandés-finlandesa", "francés-francesa", "galés-galesa", "griego-griega", "guatemalteco-guatemalteca", "haitiano-haitiana", "holandés-holandesa", "hondureño-hondureña", "indonés-indonesa", "inglés-inglesa", "iraquí-iraquí", "iraní-iraní", "irlandés-irlandesa", "israelí-israelí", "italiano-italiana", "japonés-japonesa", "jordano-jordana", "laosiano-laosiana", "letón-letona", "letonés-letonesa", "malayo-malaya", "marroquí-marroquí", "mexicano-mexicana", "nicaragüense-nicaragüense", "noruego-noruega", "neozelandés-neozelandesa", "panameño-panameña", "paraguayo-paraguaya", "peruano-peruana", "polaco-polaca", "portugués-portuguesa", "puertorriqueño-puertorriqueño", "dominicano-dominicana", "rumano-rumana", "ruso-rusa", "sueco-sueca", "suizo-suiza", "tailandés-tailandesa", "taiwanes-taiwanesa", "turco-turca", "ucraniano-ucraniana", "uruguayo-uruguaya", "venezolano-venezolana", "vietnamita-vietnamita" }));
        getContentPane().add(jcb_nationality, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, -1, -1));

        label_footer.setBackground(new java.awt.Color(102, 102, 102));
        label_footer.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        label_footer.setForeground(new java.awt.Color(102, 102, 102));
        label_footer.setText("Desarrollado por Brandon Torres © 2023");
        getContentPane().add(label_footer, new org.netbeans.lib.awtextra.AbsoluteConstraints(174, 590, 252, -1));
        getContentPane().add(label_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 620));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registerActionPerformed
        RegistroReservas registerReservation = new RegistroReservas();
        registerReservation.setVisible(true);
    }//GEN-LAST:event_btn_registerActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        UpdateGuest();
        JOptionPane.showMessageDialog(null, "Actualizacion Exitosa.");
    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        btn_delete.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {

                Delete();
                JOptionPane.showMessageDialog(null, "Eliminación Exitosa.");
                System.exit(0);
            }
        });
    }//GEN-LAST:event_btn_deleteActionPerformed

    public static void main(String args[]) {
        EventQueue.invokeLater(() -> {
            try {
                InformacionHuesped frame = new InformacionHuesped();
                frame.setVisible(true);
            } catch (Exception e) {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_register;
    private javax.swing.JButton btn_update;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jcb_nationality;
    private javax.swing.JLabel label_birthdate;
    private javax.swing.JLabel label_footer;
    private javax.swing.JLabel label_id;
    private javax.swing.JLabel label_lastName;
    private javax.swing.JLabel label_log;
    private javax.swing.JLabel label_name;
    private javax.swing.JLabel label_nationality;
    private javax.swing.JLabel label_phone;
    private javax.swing.JLabel label_title;
    private javax.swing.JLabel label_wallpaper;
    private javax.swing.JTable table_reservations;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_lastName;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_phone;
    // End of variables declaration//GEN-END:variables

    private void FillFormulary() {
        List<Huesped> guests = SearchGuest();
        try {
            for (Huesped guest : guests) {
                id = guest.getId();
                name = guest.getName();
                String last_name = guest.getLastName();
                String phone = guest.getPhone();
                Date birthDate = guest.getbirthdate();
                String nationality = guest.getNationality();
                id_reservation = guest.getIdReservation();

                txt_id.setText(String.valueOf(id));
                txt_name.setText(name);
                txt_lastName.setText(last_name);
                txt_phone.setText(phone);
                txt_birthdate.setDate(birthDate);
                jcb_nationality.setSelectedItem(nationality);

            }
        } catch (Exception e) {
            System.err.println("ERROR en cargar usuario. " + e);
            JOptionPane.showMessageDialog(null, "¡¡ERROR al cargar!!, Contacte al Administrador.");
        }
    }

    private void UpdateGuest() {
        String name_guest = txt_name.getText().trim();
        String last_name = txt_lastName.getText().trim();
        String phone = txt_phone.getText().trim();
        String birthdate = ((JTextField) txt_birthdate.getDateEditor().getUiComponent()).getText();
        //Date birthdate = (Date) txt_birthdate.getDate();
        String nationality = jcb_nationality.getSelectedItem().toString();

        this.guestController.Update(java.sql.Date.valueOf(birthdate), name_guest, last_name, phone, nationality, id);

        txt_name.setBackground(Color.green);
        txt_lastName.setBackground(Color.green);
        txt_phone.setBackground(Color.green);

    }

    private void ToListReservation() {
        List<Reserva> reservations = ToListReservations();
        try {
            for (Reserva reservation : reservations) {
                model.addRow(new Object[]{reservation.getId(), reservation.getEntryDate(),
                    reservation.getDepartureDate(), reservation.getPrice(), reservation.getmethodPayment()});
            }
        } catch (Exception e) {
            throw e;
        }
    }
    
    private void Delete() {
        try {
            int validation = 0;
            do {
                this.guestController.Delete(id);
                this.reservationController.Delete(id_reservation);
                validation ++;
            } while (validation == 1);           
        } catch(Exception e) {
            
        }
    }
}
