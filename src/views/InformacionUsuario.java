 package views;

import controller.UsuarioController;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import model.Usuario;

/**
 *
 * @author mrln
 */
public class InformacionUsuario extends javax.swing.JFrame {
    
    private String user = "", name, username; 
    private final int id_UserUp;
    private int id;
    private final UsuarioController userController;

    /**
     * Creates new form InformacionUsuario
     */
    public InformacionUsuario() {
        initComponents();
        user = Login.user;
        this.id_UserUp = GestionarUsuarios.id_UserUp;
        this.userController = new UsuarioController();
        
        setSize(630, 500);
        setResizable(false);
        setTitle("Informaci贸n del usuario " + name + " - Sesi贸n de " + user);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        
        ImageIcon wallpaper = new ImageIcon("src/images/wallpaperPrincipal.jpg");
        Icon icon = new ImageIcon(wallpaper.getImage().getScaledInstance(label_wallpaper.getWidth(),
                label_wallpaper.getHeight(), Image.SCALE_DEFAULT));
        label_wallpaper.setIcon(icon);
        this.repaint();
        
        label_titleInfo.setText("Informaci贸n del usuario " + name);
        
        ToListUser();
        
    }
    
    private List<Usuario> ToListUsers() {
        return this.userController.SearchId(id_UserUp);
    }
    
    private List<Usuario> ActiveUsers() {
        return this.userController.ActiveUser(username, id);
    }
    
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/Icon-40px.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_titleInfo = new javax.swing.JLabel();
        label_log = new javax.swing.JLabel();
        label_name = new javax.swing.JLabel();
        txt_name = new javax.swing.JTextField();
        label_mail = new javax.swing.JLabel();
        txt_mail = new javax.swing.JTextField();
        label_phone = new javax.swing.JLabel();
        txt_phone = new javax.swing.JTextField();
        label_levelType = new javax.swing.JLabel();
        cmb_lavelType = new javax.swing.JComboBox<>();
        label_userName = new javax.swing.JLabel();
        txt_userName = new javax.swing.JTextField();
        label_status = new javax.swing.JLabel();
        cmb_status = new javax.swing.JComboBox<>();
        label_registeredBy = new javax.swing.JLabel();
        txt_registeredBy = new javax.swing.JTextField();
        btn_update = new javax.swing.JButton();
        btn_password = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        label_footer = new javax.swing.JLabel();
        label_wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label_titleInfo.setFont(new java.awt.Font("Roboto", 1, 20)); // NOI18N
        label_titleInfo.setForeground(new java.awt.Color(255, 255, 255));
        label_titleInfo.setText("Informaci贸n del Usuario");
        getContentPane().add(label_titleInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        label_log.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Ha-100px.png"))); // NOI18N
        getContentPane().add(label_log, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 10, 100, 100));

        label_name.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        label_name.setForeground(new java.awt.Color(255, 255, 255));
        label_name.setText("Nombre:");
        getContentPane().add(label_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        txt_name.setBackground(new java.awt.Color(153, 153, 255));
        txt_name.setFont(new java.awt.Font("DejaVuSansMono Nerd Font", 1, 16)); // NOI18N
        txt_name.setForeground(new java.awt.Color(255, 255, 255));
        txt_name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_name.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 210, -1));

        label_mail.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        label_mail.setForeground(new java.awt.Color(255, 255, 255));
        label_mail.setText("email:");
        getContentPane().add(label_mail, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, -1));

        txt_mail.setBackground(new java.awt.Color(153, 153, 255));
        txt_mail.setFont(new java.awt.Font("DejaVuSansMono Nerd Font", 1, 16)); // NOI18N
        txt_mail.setForeground(new java.awt.Color(255, 255, 255));
        txt_mail.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_mail.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_mail, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 210, -1));

        label_phone.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        label_phone.setForeground(new java.awt.Color(255, 255, 255));
        label_phone.setText("telefono:");
        getContentPane().add(label_phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, -1, -1));

        txt_phone.setBackground(new java.awt.Color(153, 153, 255));
        txt_phone.setFont(new java.awt.Font("DejaVuSansMono Nerd Font", 1, 16)); // NOI18N
        txt_phone.setForeground(new java.awt.Color(255, 255, 255));
        txt_phone.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_phone.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 210, -1));

        label_levelType.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        label_levelType.setForeground(new java.awt.Color(255, 255, 255));
        label_levelType.setText("Permisos de:");
        getContentPane().add(label_levelType, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, -1, -1));

        cmb_lavelType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Capturista", "Tecnico" }));
        getContentPane().add(cmb_lavelType, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, -1, -1));

        label_userName.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        label_userName.setForeground(new java.awt.Color(255, 255, 255));
        label_userName.setText("Username:");
        getContentPane().add(label_userName, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 180, -1, -1));

        txt_userName.setBackground(new java.awt.Color(153, 153, 255));
        txt_userName.setFont(new java.awt.Font("DejaVuSansMono Nerd Font", 1, 16)); // NOI18N
        txt_userName.setForeground(new java.awt.Color(255, 255, 255));
        txt_userName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_userName.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_userName, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 200, 210, -1));

        label_status.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        label_status.setForeground(new java.awt.Color(255, 255, 255));
        label_status.setText("Estatus:");
        getContentPane().add(label_status, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 240, -1, -1));

        cmb_status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Inactivo" }));
        getContentPane().add(cmb_status, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 260, -1, -1));

        label_registeredBy.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        label_registeredBy.setForeground(new java.awt.Color(255, 255, 255));
        label_registeredBy.setText("Registrado por:");
        getContentPane().add(label_registeredBy, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, -1, -1));

        txt_registeredBy.setEditable(false);
        txt_registeredBy.setBackground(new java.awt.Color(153, 153, 255));
        txt_registeredBy.setFont(new java.awt.Font("DejaVuSansMono Nerd Font", 1, 16)); // NOI18N
        txt_registeredBy.setForeground(new java.awt.Color(255, 255, 255));
        txt_registeredBy.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_registeredBy.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txt_registeredBy.setEnabled(false);
        getContentPane().add(txt_registeredBy, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 210, -1));

        btn_update.setBackground(new java.awt.Color(153, 153, 255));
        btn_update.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        btn_update.setForeground(new java.awt.Color(255, 255, 255));
        btn_update.setText("Actualizar Ususario");
        btn_update.setBorder(null);
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });
        getContentPane().add(btn_update, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 320, 210, 35));

        btn_password.setBackground(new java.awt.Color(153, 153, 255));
        btn_password.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        btn_password.setForeground(new java.awt.Color(255, 255, 255));
        btn_password.setText("Restaurar Password");
        btn_password.setBorder(null);
        btn_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_passwordActionPerformed(evt);
            }
        });
        getContentPane().add(btn_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 370, 210, 35));

        btn_delete.setBackground(new java.awt.Color(153, 153, 255));
        btn_delete.setForeground(new java.awt.Color(255, 255, 255));
        btn_delete.setText("Eliminar");
        btn_delete.setBorder(null);
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });
        getContentPane().add(btn_delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 420, 100, 30));

        label_footer.setBackground(new java.awt.Color(102, 102, 102));
        label_footer.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        label_footer.setForeground(new java.awt.Color(102, 102, 102));
        label_footer.setText("Desarrollado por Marlon Torres 漏 2023");
        getContentPane().add(label_footer, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 470, 242, -1));
        getContentPane().add(label_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        btn_update.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                UpdateAdmin();
            }
        });
    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_passwordActionPerformed
        RestaurarPassword resetPassword = new RestaurarPassword();
        resetPassword.setVisible(true);
    }//GEN-LAST:event_btn_passwordActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        this.userController.Delete(id);
        JOptionPane.showMessageDialog(null, "Usuario eliminado");
        Administrador admin = new Administrador();
        admin.setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_deleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            java.awt.EventQueue.invokeLater(() -> {
                new InformacionUsuario().setVisible(true);
            });
        } catch (Exception e) {
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_password;
    private javax.swing.JButton btn_update;
    private javax.swing.JComboBox<String> cmb_lavelType;
    private javax.swing.JComboBox<String> cmb_status;
    private javax.swing.JLabel label_footer;
    private javax.swing.JLabel label_levelType;
    private javax.swing.JLabel label_log;
    private javax.swing.JLabel label_mail;
    private javax.swing.JLabel label_name;
    private javax.swing.JLabel label_phone;
    private javax.swing.JLabel label_registeredBy;
    private javax.swing.JLabel label_status;
    private javax.swing.JLabel label_titleInfo;
    private javax.swing.JLabel label_userName;
    private javax.swing.JLabel label_wallpaper;
    private javax.swing.JTextField txt_mail;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_phone;
    private javax.swing.JTextField txt_registeredBy;
    private javax.swing.JTextField txt_userName;
    // End of variables declaration//GEN-END:variables

    private void ToListUser(){
        List<Usuario> users = ToListUsers();
        try {
            for (Usuario User : users) {
                id = User.getId();
                String name_user = User.getName();
                String email = User.getEmail();
                String phone = User.getPhone();
                String userName = User.getUsername();
                String levelType = User.getLevelType();
                String status = User.getStatus();
                String register = User.getRegister();
                
                txt_name.setText(name_user);
                txt_mail.setText(email);
                txt_phone.setText(phone);
                txt_userName.setText(userName);
                txt_registeredBy.setText(register);
                cmb_lavelType.setSelectedItem(levelType);
                cmb_status.setSelectedItem(status);
            }
        } catch (Exception e) {
            System.err.println("ERROR en cargar usuario. " + e);
            JOptionPane.showMessageDialog(null, "隆隆ERROR al cargar!!, Contacte al Administrador.");
        }      
    }
    
    private void ActiveUser() {
        List<Usuario> users = ActiveUsers();
        try {
            for (Usuario User : users) {
                String userName = User.getUsername();
                if (username.equalsIgnoreCase(userName)) {
                    txt_userName.setBackground(Color.red);
                    JOptionPane.showMessageDialog(null, "Nombre de usuario no disponible");
                } else {
                }
            }
        } catch (HeadlessException e){
            throw e;
        }
    }
    
    private void UpdateAdmin() {
        int permissions_cmb, status_cmb, validation = 0;
        String nameUser, email, phone, permissions_string = "", status_string = "";
        
        nameUser = txt_name.getText().trim();
        email = txt_mail.getText().trim();
        username = txt_userName.getText().trim();
        phone = txt_phone.getText().trim();
        permissions_cmb = cmb_lavelType.getSelectedIndex() + 1;
        status_cmb = cmb_status.getSelectedIndex() + 1;
        
        if (nameUser.equals("")) {
            txt_name.setBackground(Color.red);
            validation++;
        }
        if (email.equals("")) {
            txt_mail.setBackground(Color.red);
            validation++;
        }
        if (username.equals("")) {
            txt_userName.setBackground(Color.red);
            validation++;
        }
        if (phone.equals("")) {
            txt_phone.setBackground(Color.red);
            validation++;
        }
        if (permissions_cmb == 1) {
            permissions_string = "Administrador";
        }
        if (permissions_cmb == 2) {
            permissions_string = "Capturista";
        }

        if (status_cmb == 1) {
            status_string = "Activo";
        } else if (status_cmb == 2) {
            permissions_string = "Inactivo";
        }
        
        try {
            ActiveUser();

            if (validation == 0) {
                try {
                    this.userController.Uptade(nameUser, email, phone, username, permissions_string, status_string, id);

                    JOptionPane.showMessageDialog(null, "Modificaci贸n Exitosa.");
                } catch (HeadlessException e) {
                    System.err.println("ERROR al actualizar.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debes llenar todos los campos.");
            }
        } catch(HeadlessException e){
            
        }
    }
}
