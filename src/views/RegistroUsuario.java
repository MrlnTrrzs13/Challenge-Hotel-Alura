package views;

import controller.UsuarioController;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import model.Usuario;

public class RegistroUsuario extends javax.swing.JFrame {

    private final String user;
    private String userName;
    private final UsuarioController userController;

    public RegistroUsuario() {
        initComponents();
        user = Login.user;
        this.userController = new UsuarioController();
        
        setSize(600, 640);
        setResizable(false);
        setTitle("Registrar nuevo Ususario - Sesión de " + user);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        
        ImageIcon wallpaper = new ImageIcon("src/images/wallpaperPrincipal.jpg");
        Icon icon = new ImageIcon(wallpaper.getImage().getScaledInstance(label_wallpaper.getWidth(),
                label_wallpaper.getHeight(), Image.SCALE_DEFAULT));
        label_wallpaper.setIcon(icon);
        this.repaint();

        ImageIcon log = new ImageIcon("src/images/Ha-100px.png");
        Icon icon_log = new ImageIcon(log.getImage().getScaledInstance(label_log.getWidth(),
                label_log.getHeight(), Image.SCALE_DEFAULT));
        label_log.setIcon(icon_log);
        this.repaint();

        ImageIcon background = new ImageIcon("src/images/registro.png");
        Icon icon_background = new ImageIcon(background.getImage().getScaledInstance(label_background.getWidth(),
                label_background.getHeight(), Image.SCALE_DEFAULT));
        label_background.setIcon(icon_background);
        this.repaint();
    }

    private List<Usuario> ValidationUser() {
        return this.userController.Validation(userName);
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/Icon-40px.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_log = new javax.swing.JLabel();
        label_name = new javax.swing.JLabel();
        txt_name = new javax.swing.JTextField();
        label_email = new javax.swing.JLabel();
        txt_email = new javax.swing.JTextField();
        label_phone = new javax.swing.JLabel();
        txt_phone = new javax.swing.JTextField();
        label_userName = new javax.swing.JLabel();
        txt_userName = new javax.swing.JTextField();
        label_password = new javax.swing.JLabel();
        txt_password = new javax.swing.JTextField();
        label_permission = new javax.swing.JLabel();
        jcb_permission = new javax.swing.JComboBox<>();
        btn_register = new javax.swing.JButton();
        label_register = new javax.swing.JLabel();
        label_footer = new javax.swing.JLabel();
        label_title = new javax.swing.JLabel();
        label_background = new javax.swing.JLabel();
        label_wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label_log.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Ha-100px.png"))); // NOI18N
        getContentPane().add(label_log, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 15, 100, 100));

        label_name.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        label_name.setForeground(java.awt.SystemColor.activeCaptionText);
        label_name.setText("Nombre:");
        getContentPane().add(label_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, -1, -1));

        txt_name.setBackground(new java.awt.Color(204, 204, 255));
        txt_name.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txt_name.setForeground(java.awt.SystemColor.activeCaption);
        txt_name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(txt_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 250, -1));

        label_email.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        label_email.setForeground(java.awt.SystemColor.activeCaptionText);
        label_email.setText("Email:");
        getContentPane().add(label_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, -1, -1));

        txt_email.setBackground(new java.awt.Color(204, 204, 255));
        txt_email.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txt_email.setForeground(java.awt.SystemColor.activeCaption);
        txt_email.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(txt_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 250, -1));

        label_phone.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        label_phone.setForeground(java.awt.SystemColor.activeCaptionText);
        label_phone.setText("Telefono:");
        getContentPane().add(label_phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        txt_phone.setBackground(new java.awt.Color(204, 204, 255));
        txt_phone.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txt_phone.setForeground(java.awt.SystemColor.activeCaption);
        txt_phone.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(txt_phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, 250, -1));

        label_userName.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        label_userName.setForeground(java.awt.SystemColor.activeCaptionText);
        label_userName.setText("UserName:");
        getContentPane().add(label_userName, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, -1, -1));

        txt_userName.setBackground(new java.awt.Color(204, 204, 255));
        txt_userName.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txt_userName.setForeground(java.awt.SystemColor.activeCaption);
        txt_userName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(txt_userName, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, 250, -1));

        label_password.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        label_password.setForeground(java.awt.SystemColor.activeCaptionText);
        label_password.setText("Password");
        getContentPane().add(label_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, -1, -1));

        txt_password.setBackground(new java.awt.Color(204, 204, 255));
        txt_password.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txt_password.setForeground(java.awt.SystemColor.activeCaption);
        txt_password.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(txt_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, 250, -1));

        label_permission.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        label_permission.setForeground(java.awt.SystemColor.activeCaptionText);
        label_permission.setText("Permisos de:");
        getContentPane().add(label_permission, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 490, -1, -1));

        jcb_permission.setBackground(new java.awt.Color(204, 204, 255));
        jcb_permission.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Capturista" }));
        getContentPane().add(jcb_permission, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 510, -1, -1));

        btn_register.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.png"))); // NOI18N
        btn_register.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registerActionPerformed(evt);
            }
        });
        getContentPane().add(btn_register, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 440, 120, 100));

        label_register.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        label_register.setForeground(java.awt.SystemColor.activeCaptionText);
        label_register.setText("Registrar Usuario");
        getContentPane().add(label_register, new org.netbeans.lib.awtextra.AbsoluteConstraints(445, 540, -1, -1));

        label_footer.setBackground(new java.awt.Color(102, 102, 102));
        label_footer.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        label_footer.setForeground(new java.awt.Color(102, 102, 102));
        label_footer.setText("Desarrollado por Marlon Torres © 2023");
        getContentPane().add(label_footer, new org.netbeans.lib.awtextra.AbsoluteConstraints(169, 610, 242, -1));

        label_title.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        label_title.setForeground(new java.awt.Color(255, 255, 255));
        label_title.setText("Registro de Usuarios");
        getContentPane().add(label_title, new org.netbeans.lib.awtextra.AbsoluteConstraints(187, 50, 226, -1));

        label_background.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_background.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(label_background, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 126, 381, 419));

        label_wallpaper.setBackground(new java.awt.Color(204, 204, 255));
        label_wallpaper.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        getContentPane().add(label_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 640));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registerActionPerformed
        btn_register.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                Save();
            }
        });
    }//GEN-LAST:event_btn_registerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            java.awt.EventQueue.invokeLater(() -> {
                new RegistroUsuario().setVisible(true);
            });
        } catch (Exception e) {
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_register;
    private javax.swing.JComboBox<String> jcb_permission;
    private javax.swing.JLabel label_background;
    private javax.swing.JLabel label_email;
    private javax.swing.JLabel label_footer;
    private javax.swing.JLabel label_log;
    private javax.swing.JLabel label_name;
    private javax.swing.JLabel label_password;
    private javax.swing.JLabel label_permission;
    private javax.swing.JLabel label_phone;
    private javax.swing.JLabel label_register;
    private javax.swing.JLabel label_title;
    private javax.swing.JLabel label_userName;
    private javax.swing.JLabel label_wallpaper;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_password;
    private javax.swing.JTextField txt_phone;
    private javax.swing.JTextField txt_userName;
    // End of variables declaration//GEN-END:variables

    private void Save() {
        int permissions_cmb, validation = 0;
        String name, email, phone, password, permissions_string = "", status = "Activo";

        name = txt_name.getText().trim();
        email = txt_email.getText().trim();
        phone = txt_phone.getText().trim();
        userName = txt_userName.getText().trim();
        password = txt_password.getText().trim();
        permissions_cmb = jcb_permission.getSelectedIndex() + 1;

        if (name.equals("")) {
            txt_name.setBackground(Color.red);
            validation++;
        }
        if (email.equals("")) {
            txt_email.setBackground(Color.red);
            validation++;
        }
        if (phone.equals("")) {
            txt_phone.setBackground(Color.red);
            validation++;
        }
        if (userName.equals("")) {
            txt_userName.setBackground(Color.red);
            validation++;
        }
        if (password.equals("")) {
            txt_password.setBackground(Color.red);
            validation++;
        }
        if (permissions_cmb == 1) {
            permissions_string = "Administrador";
        } else if (permissions_cmb == 2) {
            permissions_string = "Capturista";
        }

        try {
            Validation();

            if (validation == 0) {
                try {
                    Usuario Users = new Usuario(name, email, phone, userName, password, permissions_string, status, user);
                    this.userController.Save(Users);

                    Clear();

                    txt_name.setBackground(Color.GREEN);
                    txt_email.setBackground(Color.GREEN);
                    txt_phone.setBackground(Color.GREEN);
                    txt_userName.setBackground(Color.GREEN);
                    txt_password.setBackground(Color.GREEN);

                    JOptionPane.showMessageDialog(null, "Registro exitoso.");
                    this.dispose();
                } catch (HeadlessException e) {
                    System.err.println("ERROR en Registrar usuario. " + e);
                    JOptionPane.showMessageDialog(null, "¡¡ERROR al registrar!!, contacte al administrador.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debes de llenar todos los campos.");
            }
        } catch (HeadlessException e) {
            System.err.println("ERROR en validar nombre de usuario." + e);
            JOptionPane.showMessageDialog(null, "¡ERROR al comparar usuario!. Contacte al Administrador");
        }

    }

    private void Validation() {
        List<Usuario> users = ValidationUser();
        try {
            for (Usuario User : users) {
                String user_name = User.getUsername();
                if (userName.equalsIgnoreCase(user_name)) {
                    txt_userName.setBackground(Color.red);
                    JOptionPane.showMessageDialog(null, "Nombre del Ususario no disponible.");
                } else {
                }
            }
        } catch (HeadlessException e) {
            throw e;
        }
    }

    public void Clear() {
        txt_name.setText("");
        txt_email.setText("");
        txt_phone.setText("");
        txt_userName.setText("");
        txt_password.setText("");
        jcb_permission.setSelectedIndex(0);
    }
}
